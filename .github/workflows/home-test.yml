name: Home CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'apps/home/**'

jobs:
  setup:
    name: Setup dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - name: Cache dependencies
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        name: Install dependencies (if uncached)
        run: yarn install --frozen-lockfile
  lint:
    name: Lint home app
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - name: Cache dependencies
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Run lint on home app
        run: yarn nx lint home
  test:
    name: Test home app
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - name: Cache dependencies
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Run unit test
        run: yarn test home --coverage
      - name: Upload coverage as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/**
  upload-coverage:
    name: Upload home coverage to codeCov
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download coverage from artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: '**/coverage/apps/home/coverage-final.json'
          flags: home
